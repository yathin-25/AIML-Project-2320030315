# -*- coding: utf-8 -*-
"""DataVisulaization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rUNXeC8dU5C-G8WtVVB8ElCixd2shNf0

Simple Plot
"""

from matplotlib import pyplot as plt

 #Plotting to our canvas

plt.plot([1,2,3],[4,5,1])

 #Showing what we plotted

plt.show()

"""Simple plot with Title

"""

x = [5,2,7]
y = [2,16,4]
plt.plot(x,y)
plt.title('Info')
plt.ylabel('Y axis')
plt.xlabel('X axis')
plt.show()

"""Controlling Fonts and overriding default setings

"""

from matplotlib.font_manager import FontProperties
font_0 = FontProperties()
font_0.get_family()
font_0.set_family('fantasy')

x = [1, 2, 4, 5]
y = [5, 2, 5, 8]
plt.plot(x, y)
plt.xlabel('The x label')
plt.ylabel('The y label')
plt.title('A matplotlib plot', fontproperties = font_0, fontsize = 15, loc = 'left')

plt.plot(x, y, '--*', color = '#70a431')
plt.xlabel('The x label')
plt.ylabel('The y label')
plt.title('A matplotlib plot', fontproperties = font_0, fontsize = 15, loc = 'left')

plt.plot(x, y, '-o', color = 'purple')
plt.xlabel('The x label')
plt.ylabel('The y label')
plt.title('A matplotlib plot', fontproperties = font_0, fontsize = 15, loc = 'left')

"""Simple plot with Style

"""

from matplotlib import pyplot as plt
from matplotlib import style

style.use('ggplot')
x = [5,8,10]
y = [12,16,6]
x2 = [6,9,11]
y2 = [6,15,7]
plt.plot(x,y,'g',label='line one', linewidth=5)
plt.plot(x2,y2,'c',label='line two',linewidth=5)
plt.title('Epic Info')
plt.ylabel('Y axis')
plt.xlabel('X axis')
plt.legend()
plt.grid(True,color='k')
plt.show()

"""BAR Plot

A barplot (or barchart) is one of the most common types of graphic.
It shows the relationship between a numeric and a categoric variable.
Each entity of the categoric variable is represented as a bar.
The size of the bar represents its numeric value.
"""

from matplotlib import pyplot as plt

plt.bar([0.25,1.25,2.25,3.25,4.25],[50,40,70,80,20],
label="BMW",color='g',width=.5)
plt.bar([.75,1.75,2.75,3.75,4.75],[80,20,20,50,60],
label="Audi", color='r',width=.5)
plt.legend()
plt.xlabel('Days')
plt.ylabel('Distance (kms)')
plt.title('Information')
plt.show()

"""HistroGram

A histogram is a display of statistical information that uses rectangles to show
the frequency of data items in successive numerical intervals of equal size.
"""

import matplotlib.pyplot as plt
population_age = [22,55,62,45,21,22,34,42,42,4,2,102,95,85,55,110,120,70,65,55,111,115,80,75,65,54,44,43,42,48]
bins = [0,10,20,30,40,50,60,70,80,90,100]
plt.hist(population_age, bins, histtype='bar', rwidth=0.8)
plt.xlabel('age groups')
plt.ylabel('Number of people')
plt.title('Histogram')
plt.show()

"""Scatter plot

A Scatter (XY) Plot has points that show the relationship between two sets of data.
"""

import numpy as np

x = np.random.random(1000)
y = np.random.random(1000)
plt.scatter(x, y)

import matplotlib.pyplot as plt
x = [1,1.5,2,2.5,3,3.5,3.6]
y = [7.5,8,8.5,9,9.5,10,10.5]

x1=[8,8.5,9,9.5,10,10.5,11]
y1=[3,3.5,3.7,4,4.5,5,5.2]

plt.scatter(x,y, label='high income low saving',color='r')
plt.scatter(x1,y1,label='low income high savings',color='b')
plt.xlabel('saving*100')
plt.ylabel('income*1000')
plt.title('Scatter Plot')
plt.legend()
plt.show()

"""PIE chart

A pie chart is a circular diagram and the area of the sector of a circle is used in a pie chart. Circles are drawn with radii proportional to the square root of the quantities because the area of a circle is πr2. ... The total angle of the circle is 360∘. The angles of each component are calculated by the formula.
"""

import matplotlib.pyplot as plt

days = [1,2,3,4,5]

sleeping =[7,8,6,11,7]
eating = [2,3,4,3,2]
working =[7,8,7,2,2]
playing = [8,5,7,8,13]
slices = [7,2,2,13]
activities = ['sleeping','eating','working','playing']
cols = ['c','m','r','b']

plt.pie(slices,
  labels=activities,
  colors=cols,
  startangle=90,
  shadow= True,
  explode=(0,0.1,0,0),
  autopct='%1.1f%%')

plt.title('Pie Plot')
plt.show()

"""SUB plots

"""

import numpy as np
import matplotlib.pyplot as plt

def f(t):
    return np.exp(-t) * np.cos(2*np.pi*t)
t1 = np.arange(0.0, 5.0, 0.1)
t2 = np.arange(0.0, 5.0, 0.02)
plt.subplot(221)
plt.plot(t1, f(t1), 'bo', t2, f(t2))
plt.subplot(222)
plt.plot(t2, np.cos(2*np.pi*t2))
plt.show()

"""BOX plot
A boxplot is a standardized way of displaying the distribution of data based on a five number summary (“minimum”, first quartile (Q1), median, third quartile (Q3), and “maximum”). It can tell you about your outliers and what their values are. It can also tell you if your data is symmetrical, how tightly your data is grouped, and if and how your data is skewed.
"""

import seaborn as sns
import matplotlib.pyplot as plt

df = sns.load_dataset('iris')
df.head()

sns.boxplot( y=df["sepal_length"] );

#One numerical variable, and several groups
#Let’s say we want to study the distribution of a numerical variable, but for each group separately. Here we study the sepal length of 3 species of flower.

#view sourceprint?
# library & dataset


sns.boxplot( x=df["species"], y=df["sepal_length"] )

iris = sns.load_dataset("iris")
sns.catplot(data=iris, orient="h", kind="box");

"""DATA Visulaization on data set

"""

import seaborn as sns
tips = sns.load_dataset('tips')
tips.head()

tips.plot()

tips['total_bill'].plot()

#adjust the kind of plot
tips['total_bill'].plot(kind = 'hist')

#same as using pyplot directly
plt.hist(tips['total_bill'])

#using additional arguments
tips['total_bill'].plot(kind = 'density', title = 'A Density Plot')

#plot results of aggregation
tips.groupby('smoker')['total_bill'].mean().plot(kind = 'bar')

"""Heat Map


"""

#heat map is only for numerical data
print(tips.corr())
sns.heatmap(tips.corr(),cmap='coolwarm',annot=True)